test.os.lower() = linux  test.database_os.lower() = linux
self.results['frameworks'] != None: True
test.name: nodejs
self.results['completed']: {u'cpoll_cppsp': '__run_test timeout (=3600 seconds)'}

=====================================================
  Beginning nodejs
-----------------------------------------------------

-----------------------------------------------------
  Starting nodejs
-----------------------------------------------------
Welcome to Ubuntu 12.04.2 LTS (GNU/Linux 3.2.0-40-virtual x86_64)

 * Documentation:  https://help.ubuntu.com/

  System information as of Tue Dec 10 03:09:13 UTC 2013

  System load:  1.52               Processes:           71
  Usage of /:   25.3% of 19.69GB   Users logged in:     0
  Memory usage: 6%                 IP address for eth0: 10.253.6.188
  Swap usage:   0%

  Graph this data and manage this system at https://landscape.canonical.com/

  Get cloud support with Ubuntu Advantage Cloud Guest:
    http://www.ubuntu.com/business/services/cloud

  Use Juju to deploy your cloud instances and workloads:
    https://juju.ubuntu.com/#cloud-precise

133 packages can be updated.
65 updates are security updates.

*** /dev/xvda1 will be checked for errors at next reboot ***

mysql start/running, process 7374
mongodb start/running, process 7440
 * Restarting PostgreSQL 9.1 database server
   ...done.

-----------------------------------------------------
  Verifying URLs for nodejs
-----------------------------------------------------
VERIFYING JSON (/json) ...
HTTP/1.1 200 OK
Content-Type: application/json; charset=UTF-8
Date: Tue, 10 Dec 2013 03:10:31 GMT
Connection: keep-alive
Transfer-Encoding: chunked

{"message":"Hello, world"}

VERIFYING Plaintext (/plaintext) ...
HTTP/1.1 200 OK
Content-Type: text/plain; charset=UTF-8
Date: Tue, 10 Dec 2013 03:10:31 GMT
Connection: keep-alive
Transfer-Encoding: chunked

Hello, World!


-----------------------------------------------------
  Benchmarking nodejs ...
-----------------------------------------------------
BENCHMARKING JSON ... Complete
BENCHMARKING Plaintext ... worker undefined died
worker undefined died
Complete

-----------------------------------------------------
  Stopping nodejs
-----------------------------------------------------

-----------------------------------------------------
  Stopped nodejs
-----------------------------------------------------

----------------------------------------------------
Saving results through nodejs
----------------------------------------------------
